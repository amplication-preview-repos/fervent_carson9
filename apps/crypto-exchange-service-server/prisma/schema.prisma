datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Wallet {
  balance      Float?
  createdAt    DateTime      @default(now())
  currency     Currency?     @relation(fields: [currencyId], references: [id])
  currencyId   String?
  id           String        @id @default(cuid())
  orders       Order[]
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
  user         User?         @relation(fields: [userId], references: [id])
  userId       String?
}

model Transaction {
  amount     Float?
  createdAt  DateTime                  @default(now())
  currency   Currency?                 @relation(fields: [currencyId], references: [id])
  currencyId String?
  id         String                    @id @default(cuid())
  orders     Order[]
  status     EnumTransactionStatus?
  typeField  EnumTransactionTypeField?
  updatedAt  DateTime                  @updatedAt
  wallet     Wallet?                   @relation(fields: [walletId], references: [id])
  walletId   String?
}

model Currency {
  createdAt    DateTime      @default(now())
  id           String        @id @default(cuid())
  name         String?
  price        Float?
  symbolField  String?
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
  wallets      Wallet[]
}

model Order {
  createdAt     DateTime            @default(now())
  id            String              @id @default(cuid())
  status        EnumOrderStatus?
  transaction   Transaction?        @relation(fields: [transactionId], references: [id])
  transactionId String?
  typeField     EnumOrderTypeField?
  updatedAt     DateTime            @updatedAt
  wallet        Wallet?             @relation(fields: [walletId], references: [id])
  walletId      String?
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
  wallets   Wallet[]
}

enum EnumTransactionStatus {
  Option1
}

enum EnumTransactionTypeField {
  Option1
}

enum EnumOrderStatus {
  Option1
}

enum EnumOrderTypeField {
  Option1
}
