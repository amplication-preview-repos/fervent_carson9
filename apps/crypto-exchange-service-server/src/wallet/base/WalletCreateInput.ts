/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  Min,
  Max,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { CurrencyWhereUniqueInput } from "../../currency/base/CurrencyWhereUniqueInput";
import { Type } from "class-transformer";
import { OrderCreateNestedManyWithoutWalletsInput } from "./OrderCreateNestedManyWithoutWalletsInput";
import { TransactionCreateNestedManyWithoutWalletsInput } from "./TransactionCreateNestedManyWithoutWalletsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class WalletCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  balance?: number | null;

  @ApiProperty({
    required: false,
    type: () => CurrencyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CurrencyWhereUniqueInput)
  @IsOptional()
  @Field(() => CurrencyWhereUniqueInput, {
    nullable: true,
  })
  currency?: CurrencyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutWalletsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutWalletsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutWalletsInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutWalletsInput;

  @ApiProperty({
    required: false,
    type: () => TransactionCreateNestedManyWithoutWalletsInput,
  })
  @ValidateNested()
  @Type(() => TransactionCreateNestedManyWithoutWalletsInput)
  @IsOptional()
  @Field(() => TransactionCreateNestedManyWithoutWalletsInput, {
    nullable: true,
  })
  transactions?: TransactionCreateNestedManyWithoutWalletsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { WalletCreateInput as WalletCreateInput };
